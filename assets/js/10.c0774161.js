(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{358:function(t,v,_){"use strict";_.r(v);var e=_(42),i=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"问题汇总"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问题汇总"}},[t._v("#")]),t._v(" 问题汇总")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),_("p",[t._v("这里将 "),_("code",[t._v("微开发")]),t._v(" 中涉及到的一些各种问题进行汇总，方便查找和理解。")])]),t._v(" "),_("h2",{attrs:{id:"问题列表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问题列表"}},[t._v("#")]),t._v(" 问题列表")]),t._v(" "),_("h3",{attrs:{id:"问：脚手架使用-ssh协议-操作-git-，提示：are-you-sure-you-want-to-continue-connecting-yes-no-fingerprint-怎么办？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问：脚手架使用-ssh协议-操作-git-，提示：are-you-sure-you-want-to-continue-connecting-yes-no-fingerprint-怎么办？"}},[t._v("#")]),t._v(" 问：脚手架使用 "),_("code",[t._v("ssh协议")]),t._v(" 操作 "),_("code",[t._v("git")]),t._v(" ，提示："),_("code",[t._v("Are you sure you want to continue connecting (yes/no/[fingerprint])?")]),t._v("怎么办？")]),t._v(" "),_("p",[t._v("答：这是 "),_("code",[t._v("ssh协议")]),t._v(" 的一种默认行为，意思是 你当前本机和通信的服务器(这里是指"),_("code",[t._v("git所在服务器")]),t._v(")是第一次通过 "),_("code",[t._v("ssh协议")]),t._v(" 的方式，需要进行一次握手确认，输入 yes 之后，会在 "),_("code",[t._v("~/.ssh/known_hosts")]),t._v(" 文件中生成一个唯一指纹（本机和本次连接的远端服务器），后续就不会再提示。")]),t._v(" "),_("p",[t._v("本机输入 yes 虽然可以解决问题。但在服务器发布时，"),_("code",[t._v("Jenkins")]),t._v(" 自动执行，无法输入 yes ，这会存在问题。")]),t._v(" "),_("p",[t._v("解决办法：方式不止一种，第一种服务器进行设置，可以跳过握手确认，但有时候我们可能是需要其他 "),_("code",[t._v("git平台的仓库")]),t._v("，这个时候从服务器解决，就不行了。")]),t._v(" "),_("p",[t._v("所以最终还是通过我们本机客户端解决，步骤如下：")]),t._v(" "),_("ol",[_("li",[t._v("打开终端（window 记得用 git bash）")]),t._v(" "),_("li",[_("code",[t._v("vim ~/.ssh/config")]),t._v(" # 如果没有该文件 ，这条命令会自动创建文件，并打开 "),_("code",[t._v("vim")]),t._v(" 编辑器模式，输入 "),_("code",[t._v("i")]),t._v(" 可进行编辑")]),t._v(" "),_("li",[t._v("复制 "),_("code",[t._v("StrictHostKeyChecking no")]),t._v(" 到文件中")]),t._v(" "),_("li",[t._v("保存退出即可。 （以后任何平台 ssh 第一次连接，都不会再提示。）")])]),t._v(" "),_("p",[_("code",[t._v("Jenkins")]),t._v(" 发布时，"),_("code",[t._v("Jenkins")]),t._v(" 所在机器，按照同样的方式设置即可。")]),t._v(" "),_("h3",{attrs:{id:"问：脚手架运行环境"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问：脚手架运行环境"}},[t._v("#")]),t._v(" 问：脚手架运行环境")]),t._v(" "),_("p",[t._v("答：脚手架内部需要执行 "),_("code",[t._v("git 命令")]),t._v("，所以 "),_("code",[t._v("window")]),t._v(" 需要安装 "),_("code",[t._v("git bash命令行工具")]),t._v("，需要在 "),_("code",[t._v("git bash")]),t._v(" 终端下执行，"),_("code",[t._v("window")]),t._v(" 自带 "),_("code",[t._v("cmd")]),t._v(" 不支持。")]),t._v(" "),_("h3",{attrs:{id:"问：-主业务仓库嵌套依赖子仓库，主业务仓库操作git会不会有问题？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问：-主业务仓库嵌套依赖子仓库，主业务仓库操作git会不会有问题？"}},[t._v("#")]),t._v(" 问： 主业务仓库嵌套依赖子仓库，主业务仓库操作git会不会有问题？")]),t._v(" "),_("p",[t._v("答：主业务仓库中，嵌套的依赖子仓库，将在主仓库中被 git 忽略掉，所以操作主业务仓库时，会忽略嵌套的依赖子仓库，不会把依赖的子仓库提交上去。")]),t._v(" "),_("h3",{attrs:{id:"问：使用-cli脚手架-操作依赖的子仓库git时，会不会影响到主业务仓库？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问：使用-cli脚手架-操作依赖的子仓库git时，会不会影响到主业务仓库？"}},[t._v("#")]),t._v(" 问：使用 "),_("code",[t._v("cli脚手架")]),t._v(" 操作依赖的子仓库git时，会不会影响到主业务仓库？")]),t._v(" "),_("p",[t._v("答：这个问题首先要了解一下在 终端 执行 "),_("code",[t._v("git")]),t._v(" 命令时的上下文概念，什么是上下文概念呢？")]),t._v(" "),_("p",[t._v("假设，你现在执行 "),_("code",[t._v("git status")]),t._v(" 命令，那么，你执行命令所处位置（目录），则必须是一个仓库，你这个仓库目录，就是"),_("code",[t._v("git的上下文")]),t._v("。")]),t._v(" "),_("p",[t._v("然后，当出现了 仓库嵌套子仓库时，只要你没有进入到子仓库的目录，那么，你所处的 "),_("code",[t._v("Git上下文")]),t._v("，依然是"),_("code",[t._v("外层的Git仓库")]),t._v("。")]),t._v(" "),_("p",[t._v("但是，当你一旦进入到子仓库目录时，你所处的"),_("code",[t._v("Git上下文")]),t._v("，则变成了当前所处的"),_("code",[t._v("子git仓库")]),t._v("，你在执行"),_("code",[t._v("git")]),t._v("的任何命令，都是操作的当前"),_("code",[t._v("子git仓库")]),t._v("，和"),_("code",[t._v("外层git仓库")]),t._v("没有一点关系。")]),t._v(" "),_("p",[t._v("需要注意的是：当在"),_("code",[t._v("外层git仓库")]),t._v("时，想直接操作"),_("code",[t._v("子仓库")]),t._v("，正常情况，需要 "),_("code",[t._v("cd 子仓库中")]),t._v("，然后执行 "),_("code",[t._v("git 的各种命令")]),t._v("，这比较繁琐，很麻烦。")]),t._v(" "),_("p",[t._v("不过还好，"),_("code",[t._v("git")]),t._v("提供了一个仓库 "),_("code",[t._v("-C")]),t._v(" 可以指定"),_("code",[t._v("git仓库上下文")]),t._v("，比如在"),_("code",[t._v("外层git仓库")]),t._v("执行 "),_("code",[t._v("git -C 子仓库的目录位置 status")]),t._v(" 时，这个时候，就等同于 "),_("code",[t._v("cd 子仓库的目录位置 && git status")]),t._v(" 。")]),t._v(" "),_("p",[t._v("脚手架内部，就是用到了 "),_("code",[t._v("-C")]),t._v(" 这个参数。")]),t._v(" "),_("div",{staticClass:"custom-block warning"},[_("p",{staticClass:"custom-block-title"},[t._v("注意注意注意")]),t._v(" "),_("p",[t._v("git 参数 -C , 需要 git的版本 1.9.x 才支持，本机安装的一般都是最新的，而 Linux 系统中，如果使用 yum 安装，大多默认版本都是 1.8.x ，如果版本不对，则需要升级。")])]),t._v(" "),_("h3",{attrs:{id:"问：git版本升级会不会影响现在git功能？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问：git版本升级会不会影响现在git功能？"}},[t._v("#")]),t._v(" 问：git版本升级会不会影响现在git功能？")]),t._v(" "),_("p",[t._v("正常来讲，升级一个小版本号，应该不会有问题。")]),t._v(" "),_("h2",{attrs:{id:"建议反馈"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#建议反馈"}},[t._v("#")]),t._v(" 建议反馈")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://github.com/micro-development/micro-development-docs/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("想法建议"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://github.com/micro-development/micro-development-cli/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("脚手架问题"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=i.exports}}]);